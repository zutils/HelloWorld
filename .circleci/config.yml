version: 2.1

jobs:
  RunLintTests:
    docker:
      - image: rustlang/rust:nightly-slim
    steps:
      - checkout
      - run: rustup component add clippy
      - run: apt update && apt -y install wget
      - run: 
          name: Lint Docker File
          command: |
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            chmod +x /bin/hadolint
            hadolint ./.circleci/files/Dockerfile
      - run:
          name: Lint Rust Code
          command: |
            cargo clippy

  RunUnitTests:
    docker: 
      - image: rustlang/rust:nightly-slim
    steps:
      - checkout
      - run: cargo test

  BuildAndPushDocker:
    docker:
      - image: docker:latest
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: Build Docker Image
          command: |
            cd .circleci/files
            docker build -t hello_world_server .
      - run:
          name: Login To Docker Hub
          command: | 
            docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
      - run:
          name: Push Docker Image
          command: |
            docker tag hello_world_server ${DOCKERHUB_USERNAME}/udacity:${CIRCLE_WORKFLOW_ID:0:7}
            docker push ${DOCKERHUB_USERNAME}/udacity:${CIRCLE_WORKFLOW_ID:0:7}            

  GenerateInfrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Update Infrastructure
          command: |
            cd .circleci/files
            aws cloudformation deploy --stack-name udacityCapstone --template-file=aws_cloudformation.yml

  ConfigureInfrastructure:
    docker:
      - image: mullnerz/ansible-playbook:latest
    environment:
        ANSIBLE_HOST_KEY_CHECKING: "false"
    steps:
      - checkout # Checkout so we know what to scale to!
      - add_ssh_keys: 
          fingerprints: ["0c:88:ce:b8:35:93:62:74:b6:43:82:ab:ef:53:21:f5"] 
      - run: 
          name: Generate inventory
          command: |
            echo "[web]" > /tmp/inventory.txt
            echo "44.242.101.111" >> /tmp/inventory.txt
      - run:
          name: Update Infrastructure
          command: |
            ansible-playbook -vvv -i /tmp/inventory.txt .circleci/ansible/configure-server.yml --extra-vars "IMAGETAG=${CIRCLE_WORKFLOW_ID:0:7}"          
            
  SmokeTest:
    docker:
      - image: curlimages/curl:latest
    steps:
      - run:
          name: Smoke Test
          command: |
            if $(curl -s 44.242.101.111 | grep -q Hello); then return 0; else return 1; fi

workflows:
  default:
    jobs:
      #- RunLintTests
      #- RunUnitTests
      - BuildAndPushDocker:
          #requires: [RunLintTests, RunUnitTests]
          filters:
            branches:
              only: [main]
      - GenerateInfrastructure:
          requires: [BuildAndPushDocker]
      - ConfigureInfrastructure:
          requires: [GenerateInfrastructure]
      - SmokeTest:
          requires: [ConfigureInfrastructure]

      
